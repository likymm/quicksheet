import {
  AfterViewInit,
  ChangeDetectionStrategy,
  Component,
} from '@angular/core';
import { RouterModule } from '@angular/router';
import { TranslocoModule } from '@ngneat/transloco';
import PSPDFKit from 'pspdfkit';

@Component({
  standalone: true,
  templateUrl: './expenses.component.html',
  changeDetection: ChangeDetectionStrategy.OnPush,
  imports: [TranslocoModule, RouterModule],
})
export class ExpensessComponent implements AfterViewInit {
  base64EncodedDocument =
    '';

  async ngAfterViewInit(): Promise<void> {
    setTimeout(async () => {
      // Decode base64-encoded PDF
      const decodedPdf = atob(this.base64EncodedDocument);

      // Convert decoded PDF data to Uint8Array
      const byteArray = new Uint8Array(decodedPdf.length);
      for (let i = 0; i < decodedPdf.length; i++) {
        byteArray[i] = decodedPdf.charCodeAt(i);
      }

      // Create a Blob from Uint8Array data
      const pdfBlob = new Blob([byteArray], { type: 'application/pdf' });

      PSPDFKit.load({
        document: await pdfBlob.arrayBuffer(),
        // Use the assets directory URL as a base URL. PSPDFKit will download its library assets from here.
        baseUrl: 'http://localhost:4200/assets/',
        container: '#pspdfkit',
      });
    }, 1000);
  }
}
